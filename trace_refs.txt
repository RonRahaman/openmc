src/fixed_source.F90:        ! set particle trace
src/fixed_source.F90:        trace = .false.
src/fixed_source.F90:        if (current_batch == trace_batch .and. current_gen == trace_gen .and. &
src/fixed_source.F90:             work_index(rank) + i == trace_particle) trace = .true.
src/geometry.F90:        ! Show cell information on trace
src/geometry.F90:        if (verbosity >= 10 .or. trace) then
src/geometry.F90:    if (verbosity >= 10 .or. trace) then
src/geometry.F90:      if (verbosity >= 10 .or. trace) then
src/geometry.F90:      if (verbosity >= 10 .or. trace) then
src/geometry.F90:    if (verbosity >= 10 .or. trace) then
src/global.F90:  logical    :: trace
src/global.F90:  integer    :: trace_batch
src/global.F90:  integer    :: trace_gen
src/global.F90:  integer(8) :: trace_particle
src/global.F90:!$omp&              trace, thread_id, current_work, matching_bins)
src/input_xml.F90:    ! Particle trace
src/input_xml.F90:    if (check_for_node(doc, "trace")) then
src/input_xml.F90:      call get_node_array(doc, "trace", temp_int_array3)
src/input_xml.F90:      trace_batch    = temp_int_array3(1)
src/input_xml.F90:      trace_gen      = temp_int_array3(2)
src/input_xml.F90:      trace_particle = int(temp_int_array3(3), 8)
src/physics.F90:    if (verbosity >= 10 .or. trace) then
src/source.F90:    ! set particle trace
src/source.F90:    trace = .false.
src/source.F90:    if (current_batch == trace_batch .and. current_gen == trace_gen .and. &
src/source.F90:         p % id == trace_particle) trace = .true.
src/tracking.F90:    ! Display message if high verbosity or trace is on
src/tracking.F90:    if (verbosity >= 9 .or. trace) then
